-- 1. What query would you run to get all the customers inside city_id = 312? Your query should return customer first name, last name, email, and address.
select customer.first_name, customer.last_name, customer.email, address.address
from address
join customer
on address.address_id = customer.address_id
where address.city_id = 312;

-- 2. What query would you run to get all comedy films? Your query should return film title, description, release year, rating, special features, and genre (category).
select film.title, film.description, film.release_year, film.rating, film.special_features, category.name
from film
join film_category
on film.film_id = film_category.film_id
join category
on film_category.category_id = category.category_id
where category.name = 'Comedy';

-- 3. What query would you run to get all the films joined by actor_id=5? Your query should return the actor id, actor name, film title, description, and release year.
select actor.first_name, actor.last_name, film.title, film.description, film.release_year
from film
join film_actor
on film.film_id = film_actor.film_id
join actor
on film_actor.actor_id = actor.actor_id
where actor.actor_id = 5;

-- 4. What query would you run to get all the customers in store_id = 1 and inside these cities (1, 42, 312 and 459)? Your query should return customer first name, last name, email, and address.
select customer.first_name, customer.last_name, customer.email, address.address, address.address2
from city
join address
on city.city_id = address.city_id
join customer
on address.address_id = customer.address_id
where customer.store_id = 1
and city.city_id In (1, 42, 312, 459);

-- 5. What query would you run to get all the films with a "rating = G" and "special feature = behind the scenes", joined by actor_id = 15? Your query should return the film title, description, release year, rating, and special feature. Hint: You may use LIKE function in getting the 'behind the scenes' part.
select film.title, film.description, film.release_year, film.rating, film.special_features
from film
join film_category
on film.film_id = film_category.film_id
join category
on film_category.category_id = category.category_id
where rating = 'G'
and film.special_features like 'behind the scenes';

-- 6. What query would you run to get all the actors that joined in the film_id = 369? Your query should return the film_id, title, actor_id, and actor_name.
select film.film_id, film.title, actor.actor_id, actor.first_name, actor.last_name
from film
join film_actor
on film.film_id = film_actor.film_id
join actor
on film_actor.actor_id = actor.actor_id
where film.film_id = 369;

-- 7. What query would you run to get all drama films with a rental rate of 2.99? Your query should return film title, description, release year, rating, special features, and genre (category).

-- This way got multiple copies of each film, so I tried the next approach (joining from the other direction), which did the same. Ended up using a group by to just see one of each title
-- select film.title, film.description, film.release_year, film.rating, film.special_features, category.name
-- from payment
-- join rental on payment.rental_id = rental.rental_id
-- join inventory on rental.inventory_id = inventory.inventory_id
-- join film on inventory.film_id = film.film_id
-- join film_category on film.film_id = film_category.film_id
-- join category on film_category.category_id = category.category_id
-- where category.name = 'drama'
-- and payment.amount = 2.99;

select film.title, film.description, film.release_year, film.rating, film.special_features, category.name
from category
join film_category on category.category_id = film_category.category_id
join film on film_category.film_id = film.film_id
join inventory on film.film_id = inventory.film_id
join rental on inventory.inventory_id = rental.inventory_id
join payment on rental.rental_id = payment.rental_id
where category.name = 'drama'
and payment.amount = 2.99
group by film.title;

-- 8. What query would you run to get all the action films which are joined by SANDRA KILMER? Your query should return film title, description, release year, rating, special features, genre (category), and actor's first name and last name.

select film.title, film.description, film.release_year, film.rating, film.special_features, category.name, actor.first_name, actor.last_name
from category
join film_category on category.category_id = film_category.category_id
join film on film_category.film_id = film.film_id
join film_actor on film.film_id = film_actor.film_id
join actor on film_actor.actor_id = actor.actor_id
where category.name = 'action' and actor.first_name = 'Sandra' and actor.last_name = 'Kilmer';`